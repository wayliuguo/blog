import{_ as l,o as s,c as a,U as n}from"./chunks/framework.9adb0f96.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/project/rollup&vite.md","filePath":"article/project/rollup&vite.md","lastUpdated":1690504532000}'),e={name:"article/project/rollup&vite.md"},p=n(`<h2 id="rollup" tabindex="-1">rollup <a class="header-anchor" href="#rollup" aria-label="Permalink to &quot;rollup&quot;">​</a></h2><ul><li><p>特点</p><ul><li>不会生成过多的运行代码</li><li>可以多模块规范打包</li></ul></li><li><p>核心配置</p><ul><li>input: 入口</li><li>output: <ul><li>dir: 输出目录，与 file二选一</li><li>file: 输出目录</li><li>format: 必须，输出的模块化</li></ul></li><li>external: 忽略打包进bundle的</li><li>plugins</li></ul></li><li><p>打包第三方</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i @rollup/plugin-node-resolve -D</span></span></code></pre></div></li><li><p>压缩</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i @rollup/plugin-terser -D</span></span></code></pre></div></li></ul><h2 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h2><ul><li><p>特点</p><ul><li>最大特点使用esm，让代码不像传统的构建工具一样去分析引入，打包构建，而是直接保持模块化，省去大量的编译时间，让代码更改后响应速度大量提升</li><li>原理是给script标签添加<code>type: module</code>使浏览器能自己分析模块，有兼容性</li></ul></li><li><p>处理各种资源</p><ul><li>天生支持css以及预处理语言</li><li>支持typescript</li><li>能处理各种资源</li></ul></li><li><p>特殊语言需要添加插件</p><ul><li><p>vue</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i @vitejs/plugin-vue -D</span></span></code></pre></div></li><li><p>jsx</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">esbuild: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    jsxFactory: &#39;h&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    jsxFragment: &#39;Fragment&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    jsxInject: &quot;import {h} from &#39;vue&#39;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div></li></ul></li><li><p>代码分隔</p><ul><li>vite 会自动分隔异步引入代码，第三方库vendor或者特殊拆分需要借助rollup 的 manualChunks</li></ul></li><li><p>server</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">server: {</span></span>
<span class="line"><span style="color:#A6ACCD;">	port: 8080,</span></span>
<span class="line"><span style="color:#A6ACCD;">		proxy: {</span></span>
<span class="line"><span style="color:#A6ACCD;">			&#39;/api&#39;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">			target: &#39;http://localhost:3000&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">			rewrite: path =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">				console.log(path)</span></span>
<span class="line"><span style="color:#A6ACCD;">				return path</span></span>
<span class="line"><span style="color:#A6ACCD;">				// return path.replace(/^\\/api/, &#39;&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">			}</span></span>
<span class="line"><span style="color:#A6ACCD;">		}</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div></li></ul>`,4),t=[p];function i(o,c,r,u,C,d){return s(),a("div",null,t)}const y=l(e,[["render",i]]);export{h as __pageData,y as default};
