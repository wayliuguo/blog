{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProps.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/PublicInstanceProxyHandlers.ts","../../runtime-core/src/component.ts","../../runtime-core/src/renderer.ts","../src/index.ts"],"sourcesContent":["export const isObject = (value: unknown): boolean => typeof value === 'object' && value !== null\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const isArray = Array.isArray\r\n\r\nexport const isFunction = value => typeof value === 'function'\r\n\r\nexport const isNumber = value => typeof value === 'number'\r\n\r\nexport const isString = value => typeof value === 'string'\r\n\r\nexport const isIntegerKey = key => `${parseInt(key)}` === key\r\n\r\n// 判断对象是否存在此属性\r\nexport const hasOwn = (target, key) => Object.prototype.hasOwnProperty.call(target, key)\r\n\r\nexport const hasChanged = (oldValue, value) => oldValue !== value\r\n","export const nodeOps = {\r\n    // createElement, 不同的平台创建元素方式不同\r\n    createElement: tagName => document.createElement(tagName),\r\n    // 移除元素\r\n    remove: child => {\r\n        // 先找到其父元素\r\n        const parent = child.parentNode\r\n        if (parent) {\r\n            parent.removeChild(child)\r\n        }\r\n    },\r\n    // 如果参照物anchor为空，相当于appendChild\r\n    insert: (child, parent, anchor = null) => {\r\n        parent.insertBefore(child, anchor)\r\n    },\r\n    // 查询\r\n    querySelector: selector => document.querySelector(selector),\r\n    // 设置元素文本\r\n    setElementText: (el, text) => (el.textContent = text),\r\n    // 创建文本\r\n    createText: text => document.createTextNode(text),\r\n    // 设置节点内容\r\n    setText: (node, text) => (node.nodeValue = text)\r\n}\r\n","export const patchAttr = (el, key, value) => {\r\n    if (value === null) {\r\n        el.removeAttribute(key)\r\n    } else {\r\n        el.setAttribute(key, value)\r\n    }\r\n}\r\n","export const patchClass = (el, value) => {\r\n    if (value == null) {\r\n        value = ''\r\n    }\r\n    el.className = value\r\n}\r\n","// 1.给元素缓存一个绑定事件的列表\r\n// 2.如果缓存中没有缓存过的，而且value有值，需要绑定方法并且缓存起来\r\n// 3.以前绑定过，value没有值，需要删除绑定方法与删除缓存\r\n// 4.前后都有，直接改变invoker 中 value 属性指向最新的事件即可\r\nexport const patchEvent = (el, key, value) => {\r\n    // 对函数的缓存\r\n    const invokers = el._vei || (el._vei = {})\r\n    // 如果不存在\r\n    const exists = invokers[key]\r\n    if (value && exists) {\r\n        // 需要绑定事件，而且还存在的情况下\r\n        exists.value = value\r\n    } else {\r\n        const eventName = key.slice(2).toLowerCase()\r\n        if (value) {\r\n            // 要绑定事件且以前没有绑定过\r\n            const invoker = (invokers[key] = createInvoker(value))\r\n            el.addEventListener(eventName, invoker)\r\n        } else {\r\n            // 以前绑定过 当时没有value\r\n            el.removeEventListener(eventName, exists)\r\n            invokers[key] = undefined\r\n        }\r\n    }\r\n}\r\n\r\n// 一个元素绑定事件 addEventListener(fn1) 切换为 addEventListener(fn2)\r\n// 可以把 value = fn1, @click=\"value\", 后续更改把 value = fn2 即可\r\nfunction createInvoker(value) {\r\n    // 每次更新事件其实都是更改引用的value即可\r\n    const invoker = e => {\r\n        invoker.value(e)\r\n    }\r\n    invoker.value = value\r\n    return invoker\r\n}\r\n","export const patchStyle = (el, prev, next) => {\r\n    // 获取样式\r\n    const style = el.style\r\n    if (next == null) {\r\n        el.removeAttribute('style')\r\n    } else {\r\n        if (prev) {\r\n            // 老的里有新的有没有需要移除\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    style[key] = ''\r\n                }\r\n            }\r\n        }\r\n        // 新的里面需要赋值到style上\r\n        for (const key in next) {\r\n            style[key] = next[key]\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable indent */\r\n// 这个里面针对的是属性操作\r\n\r\nimport { patchAttr } from './modules/attr'\r\nimport { patchClass } from './modules/class'\r\nimport { patchEvent } from './modules/event'\r\nimport { patchStyle } from './modules/style'\r\n\r\nexport const patchProps = (el, key, prevValue, nextValue) => {\r\n    switch (key) {\r\n        case 'class':\r\n            patchClass(el, nextValue)\r\n            break\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue)\r\n            break\r\n        default:\r\n            // 如果不是事件，才是属性\r\n            if (/^on[^a-z]/.test(key)) {\r\n                // 事件就是添加和删除修改\r\n                patchEvent(el, key, nextValue)\r\n            } else {\r\n                patchAttr(el, key, nextValue)\r\n            }\r\n            break\r\n    }\r\n}\r\n","// createVNode 创建虚拟节点\r\n\r\nimport { isArray, isObject, isString } from '@vue/shared'\r\nimport { ShapeFlags } from './shapeFlag'\r\n\r\n// h('div', {style: {color: red}}, 'children') h方法和createApp类似\r\nexport const createVNode = (type, props, children = null) => {\r\n    // 可以根据 type 来区分是组件 还是普通的元素\r\n\r\n    // 根据type来区分是元素还是组件\r\n\r\n    // 给虚拟节点加一个类型\r\n    const shapeFlag = isString(type) ? ShapeFlags.ELEMENT : isObject(type) ? ShapeFlags.STATEFUL_COMPONENT : 0\r\n\r\n    const vnode = {\r\n        // 一个对象来描述对应的内容，虚拟节点有跨平台的能力\r\n        __v_isVnode: true, // true 代表vnode 节点\r\n        type,\r\n        props,\r\n        children,\r\n        component: null, // 存放组件对应实例\r\n        el: null, // 稍后会将虚拟节点和真实节点对应起来\r\n        key: props && props.key, // diff 算法会用到key\r\n        shapeFlag\r\n    }\r\n    normalizeChildren(vnode, children)\r\n    return vnode\r\n}\r\n\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0\r\n    if (children == null) {\r\n        // 不对儿子进行处理\r\n    } else if (isArray(children)) {\r\n        type = ShapeFlags.ARRAY_CHILDREN\r\n    } else {\r\n        type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n    vnode.shapeFlag |= type\r\n}\r\n","import { createVNode } from './vnode'\r\n\r\nexport function createAppAPI(render) {\r\n    // 根据哪个组件哪个属性来创建应用\r\n    return function createApp(rootComponent, rootProps) {\r\n        const app = {\r\n            _props: rootProps,\r\n            _component: rootComponent,\r\n            _container: null,\r\n            // 挂载的容器\r\n            mount(container) {\r\n                // 1. 根据组件创建虚拟节点\r\n                // 2.将虚拟节点和容器获取到后调用render方法进行渲染\r\n\r\n                // 创造虚拟节点\r\n                const vnode = createVNode(rootComponent, rootProps)\r\n\r\n                // 调用 render\r\n                render(vnode, container)\r\n\r\n                app._container = container\r\n            }\r\n        }\r\n        return app\r\n    }\r\n}\r\n","import { hasOwn } from '@vue/shared'\r\n\r\nexport const PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        // 取值时要访问 setUpState, props, data\r\n        const { setupState, props, data } = instance\r\n        if (key[0] == '$') {\r\n            // 不能访问$开头的变量\r\n            return\r\n        }\r\n        if (hasOwn(setupState, key)) {\r\n            return setupState[key]\r\n        } else if (hasOwn(props, key)) {\r\n            return props[key]\r\n        } else if (hasOwn(data, key)) {\r\n            return data[key]\r\n        } else {\r\n            return undefined\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { setupState, props, data } = instance\r\n        if (hasOwn(setupState, key)) {\r\n            setupState[key] = value\r\n        } else if (hasOwn(props, key)) {\r\n            props[key] = value\r\n        } else if (hasOwn(data, key)) {\r\n            data[key] = value\r\n        }\r\n        return true\r\n    }\r\n}\r\n","// 组件中所有方法\r\n\r\nimport { PublicInstanceProxyHandlers } from './PublicInstanceProxyHandlers'\r\nimport { ShapeFlags } from './shapeFlag'\r\n\r\nexport function createComponentInstance(vnode) {\r\n    // 组件的实例\r\n    const instance = {\r\n        vnode,\r\n        type: vnode.type,\r\n        props: {},\r\n        attrs: {},\r\n        slots: {},\r\n        ctx: {},\r\n        data: {},\r\n        setupState: {}, // 如果setup返回一个对象，这个对象会作为setupState\r\n        isMounted: false // 表示这个组件是否挂载过了\r\n    }\r\n    instance.ctx = { _: instance } // instance.ctx._\r\n    return instance\r\n}\r\n\r\nexport function setupComponent(instance) {\r\n    const { props, children } = instance.vnode\r\n\r\n    // 根据 props 解析出 props 和 attrs， 将其放到 instance 上\r\n    instance.props = props\r\n    instance.children = children\r\n\r\n    // 需要先看下当前组件是否有状态的组件\r\n    const isStateful = instance.vnode.shapeFlag | ShapeFlags.STATEFUL_COMPONENT\r\n    // 表示现在是一个带状态的组件\r\n    if (isStateful) {\r\n        // 调用当前实例的setup 方法，用setup的返回值填充setupState和对应的render方法\r\n        setupStatefulComponent(instance)\r\n    }\r\n}\r\n\r\nfunction setupStatefulComponent(instance) {\r\n    // 1.代理-传递给render函数的参数\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers as any)\r\n    // 2.获取组件的类型，拿到组件的setup方法\r\n    const Component = instance.type\r\n    const { setup } = Component\r\n    const setupContext = createSetupContext(instance)\r\n    setup(instance.prpos, setupContext)\r\n    Component.render(instance.proxy)\r\n}\r\n\r\nfunction createSetupContext(instance) {\r\n    return {\r\n        attrs: instance.attrs,\r\n        slots: instance.slots,\r\n        emit: () => {},\r\n        expose: () => {}\r\n    }\r\n}\r\n","// core 根据 rendererOptions 如何渲染\r\n// createRenderer 目的是创建一个渲染器\r\n\r\nimport { createAppAPI } from './apiCreateApp'\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { ShapeFlags } from './shapeFlag'\r\n\r\nexport function createRenderer(rendererOptions) {\r\n    const setupRenderEffect = () => {}\r\n\r\n    // 挂载组件（组件的渲染流程）\r\n    const mountComponent = (initialVNode, container) => {\r\n        // 组件的渲染流程，最核心的就是调用 setup 拿到返回值，获取render 函数返回的结果来进行渲染\r\n        // 1.先有实例\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode))\r\n        // 2.需要的数据解析到实例上\r\n        setupComponent(instance)\r\n        // 3.创建一个 effect，让 render 函数执行\r\n        setupRenderEffect()\r\n    }\r\n\r\n    const processComponent = (n1, n2, container) => {\r\n        if (n1 == null) {\r\n            // 组件没有上一次的虚拟节点\r\n            mountComponent(n2, container)\r\n        } else {\r\n            // 组件更新流程\r\n        }\r\n    }\r\n\r\n    const patch = (n1, n2, container) => {\r\n        // 针对不同类型，做初始化操作\r\n        const { shapeFlag } = n2\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n            // 元素\r\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n            // 组件\r\n            processComponent(n1, n2, container)\r\n        }\r\n    }\r\n\r\n    const render = (vnode, container) => {\r\n        // core 核心, 根据不同的虚拟节点，创建对应的真实元素\r\n        // 默认调用 render，可能是初始化流程\r\n        patch(null, vnode, container)\r\n    }\r\n    return {\r\n        createApp: createAppAPI(render)\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n// 用户调用的是 runtime-dom -> runtime-core\r\n// runtime-dom 核心就是提供domAPI方法, 其作用是为了解决平台（浏览器）差异\r\n// 操作节点、操作属性的更新\r\n\r\nimport { extend } from '@vue/shared'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProps } from './patchProps'\r\nimport { createRenderer } from '@vue/runtime-core'\r\n\r\n// 节点操作就是增删改查\r\n// 属性操作包含 添加、删除、更新（样式、类、事件、其他属性）\r\n\r\n// 渲染时用到的所有方法\r\nconst rendererOptions = extend({ patchProps }, nodeOps)\r\n\r\n// vue 中 runtime-core 提供了核心的方法，用来处理渲染的，内部会使用 runtime-dom中的api进行渲染\r\nexport function createApp(rootComponent, rootProps = null) {\r\n    const app = createRenderer(rendererOptions).createApp(rootComponent, rootProps)\r\n    const { mount } = app\r\n    app.mount = function (container) {\r\n        // 清空容器的操作\r\n        container = nodeOps.querySelector(container)\r\n        container.innerHTML = ''\r\n        // 将组件渲染成dom元素，进行挂载\r\n        mount(container)\r\n    }\r\n    return app\r\n}\r\n"],"names":[],"mappings":"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"}